# version: '3.8'

# services:

#   db:
#     container_name: database
#     image: postgres:12.0-alpine
#     env_file: ./.env.postgres
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - 5432:5432

# volumes:
#   postgres_data:
#   static:
#   media:

version: '3.8'

services:
 
  react:
    container_name: react
    build:
      context: ./frontend
      dockerfile: Dockerfile
    #volumes:
      #- '.:/app'
      #- '/app/node_modules'
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true

  api:
    build: ./backend/
    #command: >
    #  sh -c "python manage.py flush --no-input &&
    #        python manage.py migrate &&
    #        python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/usr/src/app/
      - static:/src/app/static
      - static:/src/app/media
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env
    depends_on:
      - db
  
  db:
    container_name: db
    image: postgres:12.0-alpine
    env_file: ./backend/.env.postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

volumes:
  postgres_data:
  static:
  media: